name: twitter-bot-cicd

on:
  push:
    tags:
      - v*.*.*
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/moscow-time-twitter-bot
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./twitter_bot
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  deploy-azure-infra:
    needs: build-container
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the container image version tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        working-directory: twitter_bot/terraform
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        working-directory: twitter_bot/terraform
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: twitter_bot/terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        working-directory: twitter_bot/terraform
        env:
          TF_VAR_container_image_tag: ${{ steps.get_version.outputs.VERSION }}
        run: terraform plan -no-color -input=false

      - name: Terraform Apply
        if: github.event_name == 'push' && github.event.ref_type == 'tag'
        working-directory: twitter_bot/terraform
        env:
          TF_VAR_container_image_tag: ${{ steps.get_version.outputs.VERSION }}
        run: terraform apply -auto-approve -input=false
